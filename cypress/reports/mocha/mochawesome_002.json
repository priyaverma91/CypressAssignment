{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-23T15:37:06.512Z",
    "end": "2022-05-23T15:37:54.980Z",
    "duration": 48468,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8361c532-605e-490a-b12f-983fd6c38978",
      "title": "",
      "fullFile": "cypress/integration/create-sales-orders.spec.js",
      "file": "cypress/integration/create-sales-orders.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "194998e9-56d8-4521-907c-0635d68c3d41",
          "title": "Create SO card",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Scenario - 007 : Verify existing Customer displayed in dropdown when CustomerName entered on SO Creation form page",
              "fullTitle": "Create SO card Test Scenario - 007 : Verify existing Customer displayed in dropdown when CustomerName entered on SO Creation form page",
              "timedOut": null,
              "duration": 16895,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "salesPage.navigate();\nsalesPage.createSalesOrderWithExistingCustomer(customerName);\nsalesPage.verifyExistingCustomerDetails(addressName, addressLocation);",
              "err": {},
              "uuid": "bd4977d3-7702-4478-ab92-09fb0a355fc7",
              "parentUUID": "194998e9-56d8-4521-907c-0635d68c3d41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Scenario - 010 : Verify Customer Billing address is updated on SO page",
              "fullTitle": "Create SO card Test Scenario - 010 : Verify Customer Billing address is updated on SO page",
              "timedOut": null,
              "duration": 18452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "salesPage.navigate();\nsalesPage.createSalesOrderWithExistingCustomer(customerName);\nsalesPage.verifyExistingCustomerDetails(addressName, addressLocation);\nsalesPage.navigateSalesAddressUpdate();\ncustomerAddressPage.SaveCustomerAddressDetails(firstname, lastname, company, line1, line2, city, state, zip, country);\nsalesPage.verifyExistingCustomerDetails(addressNameUpdate, addressLocationUpdate);\nsalesPage.closeForm();",
              "err": {},
              "uuid": "406c668c-980c-4f03-8e3b-3bcdb264ff05",
              "parentUUID": "194998e9-56d8-4521-907c-0635d68c3d41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Scenario - 011 : Verify Customer Billing and Shipping address is deleted on SO page",
              "fullTitle": "Create SO card Test Scenario - 011 : Verify Customer Billing and Shipping address is deleted on SO page",
              "timedOut": null,
              "duration": 12925,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "salesPage.navigate();\nsalesPage.createSalesOrderWithExistingCustomer(customerName);\nsalesPage.verifyExistingCustomerDetails(addressName, addressLocation);\nsalesPage.navigateSalesAddressUpdate();\ncustomerAddressPage.removeAddress();\nsalesPage.verifyAddressRemoved();",
              "err": {},
              "uuid": "22b954a4-2e6d-4f3c-8e69-941cba9dd690",
              "parentUUID": "194998e9-56d8-4521-907c-0635d68c3d41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd4977d3-7702-4478-ab92-09fb0a355fc7",
            "406c668c-980c-4f03-8e3b-3bcdb264ff05",
            "22b954a4-2e6d-4f3c-8e69-941cba9dd690"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 48272,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}